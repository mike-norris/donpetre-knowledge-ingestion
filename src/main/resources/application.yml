# application.yml - Enhanced configuration for knowledge ingestion service

spring:
  application:
    name: knowledge-ingestion
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  # R2DBC Configuration
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/donpetre
    username: ${DB_USERNAME:don}
    password: ${DB_PASSWORD:don_pass}
    pool:
      enabled: true
      initial-size: 10
      max-size: 20
      max-idle-time: 30m
      validation-query: SELECT 1
  
  # Flyway Configuration (for schema migrations)
  flyway:
    url: jdbc:postgresql://localhost:5432/donpetre
    user: ${DB_USERNAME:don}
    password: ${DB_PASSWORD:don_pass}
    baseline-on-migrate: true
    locations: classpath:db/migration
  
  # Security Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8090/auth/realms/donpetre}
          jwk-set-uri: ${JWT_JWK_SET_URI:http://localhost:8090/auth/realms/donpetre/protocol/openid-connect/certs}

# Server Configuration
server:
  port: ${SERVER_PORT:8081}
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false

# OpenAPI/Swagger Configuration
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    tryItOutEnabled: true
    displayRequestDuration: true
    displayOperationId: true
    defaultModelsExpandDepth: 2
    defaultModelExpandDepth: 2
  show-actuator: true
  group-configs:
    - group: 'credentials'
      display-name: 'Credential Management'
      paths-to-match: ['/api/credentials/**']
    - group: 'connectors'
      display-name: 'Connector Management'
      paths-to-match: ['/api/connectors/**']
    - group: 'jobs'
      display-name: 'Job Management'
      paths-to-match: ['/api/jobs/**']

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,openapi,swagger-ui
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
  metrics:
    export:
      prometheus:
        enabled: true
  info:
    env:
      enabled: true
    git:
      mode: full

# Application-specific Configuration
open-range-labs:
  donpetre:
    # Security Configuration
    security:
      cors:
        allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
        allowed-methods: GET,POST,PUT,DELETE,OPTIONS
        allowed-headers: "*"
        allow-credentials: true
        max-age: 3600
      jwt:
        secret: ${JWT_SECRET:your-secret-key-here}
        expiration: ${JWT_EXPIRATION:86400} # 24 hours
        refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800} # 7 days
    
    # Encryption Configuration
    encryption:
      algorithm: AES/GCM/NoPadding
      key-length: 256
      secret-key: ${ENCRYPTION_SECRET_KEY:your-32-byte-encryption-key-here!!}
    
    # Rate Limiting Configuration
    rate-limiting:
      enabled: true
      requests-per-minute: ${RATE_LIMIT_RPM:100}
      burst-capacity: ${RATE_LIMIT_BURST:150}
    
    # Credential Management Configuration
    credentials:
      default-expiration-days: ${CREDENTIAL_DEFAULT_EXPIRATION:365}
      expiration-warning-days: ${CREDENTIAL_WARNING_DAYS:7}
      cleanup:
        enabled: true
        retention-days: ${CREDENTIAL_RETENTION_DAYS:2555} # 7 years for audit
        schedule: "0 2 * * SUN" # Every Sunday at 2 AM
    
    # External API Configuration
    external-apis:
      github:
        base-url: ${GITHUB_BASE_URL:https://api.github.com}
        timeout: ${GITHUB_TIMEOUT:30s}
        max-retries: ${GITHUB_MAX_RETRIES:3}
      gitlab:
        base-url: ${GITLAB_BASE_URL:https://gitlab.com/api/v4}
        timeout: ${GITLAB_TIMEOUT:30s}
        max-retries: ${GITLAB_MAX_RETRIES:3}
      jira:
        timeout: ${JIRA_TIMEOUT:45s}
        max-retries: ${JIRA_MAX_RETRIES:3}
      slack:
        timeout: ${SLACK_TIMEOUT:30s}
        max-retries: ${SLACK_MAX_RETRIES:3}

# Logging Configuration
logging:
  level:
    com.openrangelabs.donpetre: ${LOG_LEVEL:INFO}
    org.springframework.security: WARN
    org.springframework.r2dbc: DEBUG
    io.r2dbc.postgresql: WARN
    reactor.netty: WARN
  pattern:
    console: "%clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:logs/knowledge-ingestion.log}
    max-size: 100MB
    max-history: 30

# Profile-specific configurations
---
spring:
  config:
    activate:
      on-profile: dev

logging:
  level:
    com.openrangelabs.donpetre: DEBUG
    org.springframework.r2dbc: DEBUG

springdoc:
  swagger-ui:
    enabled: true

---
spring:
  config:
    activate:
      on-profile: test

spring:
  r2dbc:
    url: r2dbc:h2:mem:///testdb
    username: sa
    password: ""

logging:
  level:
    com.openrangelabs.donpetre: DEBUG

---
spring:
  config:
    activate:
      on-profile: prod

spring:
  r2dbc:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}

springdoc:
  swagger-ui:
    enabled: false

logging:
  level:
    com.openrangelabs.donpetre: WARN
    org.springframework.security: ERROR